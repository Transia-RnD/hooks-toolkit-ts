import { INVALID_ARGUMENT, INVALID_FLOAT, XFL_OVERFLOW } from 'jshooks-api'

const ASSERT = (x) => {
  if (!x) {
    rollback(x.toString(), 0)
  }
}

const Hook = (arg) => {
  ASSERT(float_multiply(undefined, float_one()) === INVALID_ARGUMENT)
  ASSERT(float_multiply(float_one(), undefined) === INVALID_ARGUMENT)

  // ensure invalid xfl are not accepted
  ASSERT(float_multiply(-1, float_one()) === INVALID_FLOAT)

  // multiply by 0
  ASSERT(float_multiply(float_one(), 0) === 0)
  ASSERT(float_multiply(0, float_one()) === 0)

  // check 1
  ASSERT(float_multiply(float_one(), float_one()) === float_one())
  ASSERT(
    float_multiply(float_one(), float_negate(float_one())) ===
      float_negate(float_one())
  )
  ASSERT(
    float_multiply(float_negate(float_one()), float_one()) ===
      float_negate(float_one())
  )
  ASSERT(
    float_multiply(float_negate(float_one()), float_negate(float_one())) ===
      float_one()
  )

  // check overflow
  // 1e+95 * 1e+95
  ASSERT(
    float_multiply(7801234554605699072n, 7801234554605699072n) === XFL_OVERFLOW
  )
  // 1e+95 * 10
  ASSERT(
    float_multiply(7801234554605699072n, 6107881094714392576n) === XFL_OVERFLOW
  )
  ASSERT(
    float_multiply(6107881094714392576n, 7801234554605699072n) === XFL_OVERFLOW
  )
  // -1e+95 * 10
  ASSERT(
    float_multiply(3189548536178311168n, 6107881094714392576n) === XFL_OVERFLOW
  )

  // identity
  ASSERT(
    float_multiply(3189548536178311168n, float_one()) === 3189548536178311168n
  )
  ASSERT(
    float_multiply(float_one(), 3189548536178311168n) === 3189548536178311168n
  )

  // random multiplications
  ASSERT(
    float_multiply(
      7791757438262485039n /* 9.537282166267951e+94 */,
      4759088999670263908n /* 3.287793167020132e-74 */
    ) === 6470304726017852129n /* 3.135661113819873e+21 */
  )
  ASSERT(
    float_multiply(
      7534790022873909775n /* 4.771445910440463e+80 */,
      1017891960669847079n /* -9.085644138855975e-26 */
    ) === 2472307761756037978n /* -4.335165957006171e+55 */
  )
  ASSERT(
    float_multiply(
      2813999069907898454n /* -3.75290242870895e+74 */,
      4962524721184225460n /* 8.56513107667986e-63 */
    ) === 1696567870013294731n /* -3214410121988.235 */
  )
  ASSERT(
    float_multiply(
      2151742066453140308n /* -8.028643824784212e+37 */,
      437647738130579252n /* -5.302173903011636e-58 */
    ) === 5732835652591705549n /* 4.256926576434637e-20 */
  )
  ASSERT(
    float_multiply(
      5445302332922546340n /* 4.953983058987172e-36 */,
      7770966530708354172n /* 6.760773121619068e+93 */
    ) === 7137051085305881332n /* 3.349275551015668e+58 */
  )
  ASSERT(
    float_multiply(
      2542989542826132533n /* -2.959352989172789e+59 */,
      6308418769944702613n /* 3379291626008.213 */
    ) === 2775217422137696933n /* -1.000051677471398e+72 */
  )
  ASSERT(
    float_multiply(
      5017652318929433511n /* 9.649533293441959e-60 */,
      6601401767766764916n /* 8.131913296358772e+28 */
    ) === 5538267259220228819n /* 7.846916809259732e-31 */
  )
  ASSERT(
    float_multiply(
      892430323307269235n /* -9.724796342652019e-33 */,
      1444078017997143500n /* -0.0292613723858478 */
    ) === 5479222755754111850n /* 2.845608871588714e-34 */
  )
  ASSERT(
    float_multiply(
      7030632722283214253n /* 5.017303585240493e+52 */,
      297400838197636668n /* -9.170462045924924e-66 */
    ) === 1247594596364389994n /* -4.601099210133098e-13 */
  )
  ASSERT(
    float_multiply(
      1321751204165279730n /* -6.700112973094898e-9 */,
      2451801790748530375n /* -1.843593458980551e+54 */
    ) === 6918764256086244704n /* 1.235228445162848e+46 */
  )
  ASSERT(
    float_multiply(
      2055496484261758590n /* -1.855054180812414e+32 */,
      2079877890137711361n /* -8.222061547283201e+33 */
    ) === 7279342234795540004n /* 1.525236964818469e+66 */
  )
  ASSERT(
    float_multiply(
      2439875962311968674n /* -7.932163531900834e+53 */,
      4707485682591872793n /* 5.727671617074969e-77 */
    ) === 1067392794851803610n /* -4.543282792366554e-23 */
  )
  ASSERT(
    float_multiply(
      6348574818322812800n /* 750654298515443.2 */,
      6474046245013515838n /* 6.877180109483582e+21 */
    ) === 6742547427357110773n /* 5.162384810848757e+36 */
  )
  ASSERT(
    float_multiply(
      1156137305783593424n /* -3.215801176746448e-18 */,
      351790564990861307n /* -9.516993310703611e-63 */
    ) === 4650775291275116746n /* 3.060475828764875e-80 */
  )
  ASSERT(
    float_multiply(
      5786888485280994123n /* 4.266563737277259e-17 */,
      6252137323085080394n /* 1141040294.831946 */
    ) === 5949619829273756853n /* 4.868321144702132e-8 */
  )
  ASSERT(
    float_multiply(
      2078182880999439640n /* -6.52705240901148e+33 */,
      1662438186251269392n /* -51135233789.26864 */
    ) === 6884837854131013999n /* 3.33762350889611e+44 */
  )
  ASSERT(
    float_multiply(
      1823781083140711248n /* -43268336830308640000 */,
      1120252241608199010n /* -3.359534020316002e-20 */
    ) === 6090320310700749729n /* 1.453614495839137 */
  )
  ASSERT(
    float_multiply(
      6617782604883935174n /* 6.498351904047046e+29 */,
      6185835042802056262n /* 689635.404973575 */
    ) === 6723852137583788318n /* 4.481493547008287e+35 */
  )
  ASSERT(
    float_multiply(
      333952667495151166n /* -9.693494324475454e-64 */,
      1556040883317758614n /* -68026.1150230799 */
    ) === 5032611291744396930n /* 6.594107598923394e-59 */
  )
  ASSERT(
    float_multiply(
      2326968399632616779n /* -3.110991909440843e+47 */,
      707513695207834635n /* -4.952153338037259e-43 */
    ) === 6180479299649214949n /* 154061.0896894437 */
  )

  ASSERT(
    float_multiply(
      1271003508324696477n /* -9.995612660957597e-12 */,
      5321949753651889765n /* 7.702193354704484e-43 */
    ) === 512101972406838313n /* -7.698814141342762e-54 */
  )
  ASSERT(
    float_multiply(
      1928646740923345323n /* -1.106100408773035e+25 */,
      4639329980209973352n /* 9.629563273103463e-81 */
    ) === 487453886143282122n /* -1.065126387268554e-55 */
  )
  ASSERT(
    float_multiply(
      6023906813956669432n /* 0.0007097711789686777 */,
      944348444470060009n /* -7.599721976996842e-30 */
    ) === 888099590592064433n /* -5.394063627447218e-33 */
  )
  ASSERT(
    float_multiply(
      6580290597764062787n /* 5.035141803138627e+27 */,
      6164319297265300034n /* 33950.07022461506 */
    ) === 6667036882686408592n /* 1.709434178074513e+32 */
  )
  ASSERT(
    float_multiply(
      2523439530503240484n /* -1.423739175762724e+58 */,
      5864448766677980801n /* 9.769251096336e-13 */
    ) === 2307233895764065602n /* -1.39088655037165e+46 */
  )
  ASSERT(
    float_multiply(
      6760707453987140465n /* 5.308012931396465e+37 */,
      5951641080643457645n /* 6.889572514402925e-8 */
    ) === 6632955645489194550n /* 3.656993999824438e+30 */
  )
  ASSERT(
    float_multiply(
      6494270716308443375n /* 9.087252894929135e+22 */,
      564752637895553836n /* -6.306284101612332e-51 */
    ) === 978508199357889360n /* -5.730679845862224e-28 */
  )
  ASSERT(
    float_multiply(
      6759145618427534062n /* 3.746177371790062e+37 */,
      4721897842483633304n /* 2.125432999353496e-76 */
    ) === 5394267403342547164n /* 7.962249007433949e-39 */
  )
  ASSERT(
    float_multiply(
      1232673571201806425n /* -7.694472557031513e-14 */,
      6884256144221925318n /* 2.75591359980743e+44 */
    ) === 2037747561727791011n /* -2.12053015632682e+31 */
  )
  ASSERT(
    float_multiply(
      1427694775835421031n /* -0.004557293586344295 */,
      4883952867277976402n /* 2.050871208358738e-67 */
    ) === 225519204318055258n /* -9.34642220427145e-70 */
  )
  ASSERT(
    float_multiply(
      5843509949864662087n /* 6.84483279249927e-14 */,
      5264483986612843822n /* 4.279621844104494e-46 */
    ) === 5028946513739275800n /* 2.929329593802264e-59 */
  )
  ASSERT(
    float_multiply(
      6038444022009738988n /* 0.003620521333274348 */,
      7447499078040748850n /* 7.552493624689458e+75 */
    ) === 7406652183825856092n /* 2.734396428760669e+73 */
  )
  ASSERT(
    float_multiply(
      939565473697468970n /* -2.816751204405802e-30 */,
      1100284903077087966n /* -1.406593998686942e-21 */
    ) === 5174094397561240824n /* 3.962025339911417e-51 */
  )
  ASSERT(
    float_multiply(
      5694071830210473617n /* 1.521901214166673e-22 */,
      5536709154363579683n /* 6.288811952610595e-31 */
    ) === 5143674525748709390n /* 9.570950546343951e-53 */
  )
  ASSERT(
    float_multiply(
      600729862341871819n /* -6.254711528966347e-49 */,
      6330630279715378440n /* 75764028872020.56 */
    ) === 851415551394320909n /* -4.738821448667662e-35 */
  )
  ASSERT(
    float_multiply(
      1876763139233864902n /* -3.265694247738566e+22 */,
      4849561230315278754n /* 3.688031264625058e-69 */
    ) === 649722744589988028n /* -1.204398248636604e-46 */
  )
  ASSERT(
    float_multiply(
      3011947542126279863n /* -3.542991042788535e+85 */,
      1557732559110376235n /* -84942.87294925611 */
    ) === 7713172080438368541n /* 3.009518380079389e+90 */
  )
  ASSERT(
    float_multiply(
      5391579936313268788n /* 5.274781978155572e-39 */,
      1018647290024655822n /* -9.840973493664718e-26 */
    ) === 329450072133864645n /* -5.190898963188932e-64 */
  )
  ASSERT(
    float_multiply(
      2815029221608845312n /* -4.783054129655808e+74 */,
      4943518985822088837n /* 7.57379422402522e-64 */
    ) === 1678961648155863225n /* -362258677403.8713 */
  )
  ASSERT(
    float_multiply(
      1377509900308195934n /* -0.00000841561358756515 */,
      7702104197062186199n /* 9.95603351337903e+89 */
    ) === 2998768765665354001n /* -8.378613091344656e+84 */
  )
  accept('', 0)
}

export { Hook }
